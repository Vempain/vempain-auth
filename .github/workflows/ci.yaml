name: Build, test and upload artifact to GitHub Packages
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]

jobs:
  test:
    name: Run all tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Java temurin 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Build with Gradle
        run: ./gradlew clean test

  publish:
    name: Package and publish to GitHub Maven
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Java temurin 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Get main and base version
        id: basemain
        shell: bash
        run: |
          baseVersion=$(cat VERSION)
          mainVersion=$(echo ${baseVersion} | cut -d '.' -f 1)
          echo "baseVersion=${baseVersion}" >> $GITHUB_OUTPUT
          echo "mainVersion=${mainVersion}" >> $GITHUB_OUTPUT

      - name: Generate new version
        id: newVer
        shell: bash
        run: |
          git fetch --tags origin
          currentVersion=$(git tag --list --sort=-version:refname "${baseVersion}.*" | head -n 1 || "${baseVersion}.0")

          if [ -z "${currentVersion}" ]; then
            newVersion="${baseVersion}.0"
          else
            runningNumber=$(echo ${currentVersion} | cut -f 3 -d '.')
            newVersion="${baseVersion}.$((${runningNumber} + 1))"
          fi
          echo "The new version is: ${newVersion}"
          echo "The generated new version is: ${newVersion}"
          echo "newVersion=${newVersion}" >> $GITHUB_OUTPUT
        env:
          baseVersion: ${{ steps.basemain.outputs.baseVersion }}

      - name: Configure Maven for GitHub Packages
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml <<EOF
          <settings>
            <servers>
              <server>
                <id>github</id>
                <username>${{ github.actor }}</username>
                <password>${{ secrets.VEMPAIN_ACTION_TOKEN }}</password>
              </server>
            </servers>
          </settings>
          EOF

      - name: Publish package
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
        run: ./gradlew publish -PreleaseVersion=${targetVersion} --no-daemon
        env:
          GITHUB_TOKEN: ${{ secrets.VEMPAIN_ACTION_TOKEN }}
          targetVersion: ${{ steps.newVer.outputs.newVersion }}

      - name: Create tag
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.VEMPAIN_ACTION_TOKEN }}
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ steps.newVer.outputs.newVersion }}',
              sha: context.sha
            })
